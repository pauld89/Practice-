float yellowX, yellowY, bluX, bluY;
float yellowDX, yellowDY, bluDX, bluDY;
float ballDia;
float yellowA, bluA;
float yellowM, bluM;
float poolT, poolB;
float poolL, poolR;

void setup(){
  size(1000,700);
  rectMode(CORNERS);
  
  yellowX=width/4;
  yellowY=height/2;
  yellowDX=10;
  yellowDY=-15;
  yellowM=3;    // movement
  yellowA=0;    //Angle movement
  
  bluX=(width-(width/4));
  bluY=height/2;
  bluDX=0;   
  bluDY=0;    
  bluA=0;    //Angle of movement
  bluM=0;    //Magnitude of movement
  
  poolT=height/4;
  poolB=height - 20;
  poolL=20;
  poolR=width - 20;
  
  ballDia=100;
  
  
  
  
}


void draw(){
  scene();
  balls();
  wallBounce();


  
  
}


void scene(){ //pool table, background
  noStroke();
  background(#DE7B02); fill(0,150,0);
  rect(poolL,poolT,poolR,poolB);
}

void balls(){ //to the wall
  fill(229,245,67); //yellow
  ellipse(yellowX,yellowY,ballDia,ballDia);
  
  fill(0,0,255); //blu
  ellipse(bluX,bluY,ballDia,ballDia);
  
}


void wallBounce(){  //the bounce of balls from the walls
  //yellow
  if(yellowX < poolL + ballDia/2 || yellowX > poolR - ballDia/2) yellowDX *= -1;
  if(yellowY > poolB - ballDia/2 || yellowY < poolT + ballDia/2) yellowDY *= -1;
  
  //Blu
  if(bluX < poolL + ballDia/2 || bluX > poolR - ballDia/2) bluDX *= -1;
  if(bluY > poolB - ballDia/2 || bluY < poolT + ballDia/2) bluDY *= -1;
}
